/**
 * Underscore.js library
 * @type {import('underscore')}
 */

var asample = sample(Gaussian({mu: 0, sigma: 1})) // asample is unused and should give a warning

// Define a function using two external primitives:
// 1. Javascript's `JSON.stringify` for converting to strings
// 2. Underscore's _.isFinite for checking if a value is a finite number
var coerceToPositiveNumber = function(x) {
  if (_.isFinite(x) && x > 0) {
    return x
  } else {
    print('- Input ' + JSON.stringify(x) +
          ' was not a positive number, returning 1 instead')
    return 1
  }
}

// Create an array with numbers, an object, an a Boolean
var inputs = [2, 3.5, -1, { key: 1 }, true]

// Map the function over the array
print('Processing elements in array ' + JSON.stringify(inputs) + '...')
var result = map(coerceToPositiveNumber, inputs)
print('Result: ' + JSON.stringify(result))

var makeCoin = function(weight) {
  return function() { return flip(weight) ? 'h' : 't' }
}

var fairCoin = makeCoin(0.5)
var trickCoin = makeCoin(0.95)
var bentCoin = makeCoin(0.25)

viz(repeat(20, fairCoin))
viz(repeat(20, trickCoin))
viz(repeat(20, bentCoin))